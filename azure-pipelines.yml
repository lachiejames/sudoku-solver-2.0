name: $(Rev:r:)

jobs:
  - job: Run_My_Pipeline
    timeoutInMinutes: 10
    pool:
      vmImage: macOS-latest

    steps:
      - task: FlutterInstall@0
        displayName: Install Flutter
        inputs:
          channel: stable
          version: latest

      - task: CmdLine@2
        displayName: Setup Flutter Environment
        inputs:
          script: |
            export PATH=$BUILD_SOURCESDIRECTORY/flutter/bin:$PATH
            export PATH=$BUILD_SOURCESDIRECTORY/flutter/bin/cache/dart-sdk/bin:$PATH
            flutter precache
            yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
            flutter doctor
            flutter pub get

      - task: CmdLine@2
        displayName: Run Unit Tests
        inputs:
          script: |
            flutter test --machine > tests.output

      - task: PowerShell@2
        displayName: Setup Emulator Environment
        inputs:
          targetType: inline
          script: |
            Write-Host "##vso[task.prependpath]$(JAVA_HOME_11_X64)"
            Write-Host "##vso[task.setvariable variable=JAVA_HOME;]$(JAVA_HOME_11_X64)"
            Write-Host "##vso[task.prependpath]$(FlutterToolPath)"
            Write-Host "##vso[task.prependpath]$(FlutterToolPath)/cache/dart-sdk/bin"

      - task: CmdLine@2
        displayName: Run Emulator
        inputs:
          script: |
            $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-29;default;x86'
            $ANDROID_HOME/tools/bin/avdmanager create avd -n "pixel" --device "pixel" -k "system-images;android-29;default;x86"
            $ANDROID_HOME/emulator/emulator -avd "pixel" -no-snapshot &
            $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

      - task: CmdLine@2
        displayName: Run Integration tests
        inputs:
          script: |
            flutter drive --target=test_driver/run_app.dart

      - task: CmdLine@2
        displayName: Calculate Test Coverage
        inputs:
          script: |
            flutter test --coverage

      - task: SonarQubePrepare@4
        displayName: Start SonarQube
        inputs:
          SonarQube: sonarqube-flutter
          scannerMode: CLI
          configMode: file

      - task: SonarQubeAnalyze@4
        displayName: Analyse SonarQube

      - task: SonarQubePublish@4
        displayName: Publish SonarQube Results
        inputs:
          pollingTimeoutSec: 300
